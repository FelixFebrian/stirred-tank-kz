/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#includeEtc     "caseDicts/mesh/generation/snappyHexMeshDict.cfg"

castellatedMesh on;
snap            on;
addLayers       on;

geometry
{
    tank
    {
        type triSurfaceMesh;
        file "tank.stl";
    }

    baffles
    {
        type triSurfaceMesh;
        file "baffles.stl";
    }

    fluidSurface
    {
        type triSurfaceMesh;
        file "fluidSurface.stl";
    }

    shaft
    {
        type triSurfaceMesh;
        file "shaft.stl";
    }

    stirrer
    {
        type triSurfaceMesh;
        file "rushton.stl";
    }
};

castellatedMeshControls
{
    // maxLocalCells       100000;
    // maxGlobalCells      100000000;
    // minRefinementCells  10;
    // maxLoadUnbalance    0.10;
    nCellsBetweenLevels 3;
    // resolveFeatureAngle 30;
    // allowFreeStandingZoneFaces true;

    features
    (
    );

    refinementSurfaces
    {
        tank
        {
            level (0 0);
            patchInfo
            {
                type wall;
            }
        }

        baffles
        {
            level (1 2);
            patchInfo
            {
                type wall;
            }
        }

        fluidSurface
        {
            level (0 0);
            patchInfo
            {
                type wall;
            }
        }

        shaft
        {
            level (2 2);
            patchInfo
            {
                type wall;
            }
        }

        stirrer
        {
            level (2 3);
            patchInfo
            {
                type wall;
            }
        }
    }

    refinementRegions
    {
    }

    locationInMesh (0 0 0);
}

snapControls
{
    nSmoothPatch    3;
    tolerance       2.0;
    // nSolveIter      100;
    // nRelaxIter      5;

    // nFeatureSnapIter 10;

    // explicitFeatureSnap    false;
    // multiRegionFeatureSnap false;
    implicitFeatureSnap    true;
}

addLayersControls
{
    layers
    {
        baffles
        {
            nSurfaceLayers 2;
        }

        shaft
        {
            nSurfaceLayers 3;
        }

        stirrer
        {
            nSurfaceLayers 3;
        }
    }

    relativeSizes       true; // false, usually with firstLayerThickness
    expansionRatio      1.2;
    finalLayerThickness 0.1;
    minThickness        1e-4;
//  firstLayerThickness 0.01;

    // featureAngle              100;
    // slipFeatureAngle          30;

    // nLayerIter                50;
    // nRelaxedIter              20;
    // nRelaxIter                5;

    // nGrow                     0;

    // nSmoothSurfaceNormals     1;
    // nSmoothNormals            3;
    // nSmoothThickness          10;
    // maxFaceThicknessRatio     0.5;
    // maxThicknessToMedialRatio 0.6;

    // minMedialAxisAngle        90;
    // nMedialAxisIter           10;

    // nBufferCellsNoExtrude     0;
    // additionalReporting       false;
    // nSmoothDisplacement       0;
    // detectExtrusionIsland     false;
}

writeFlags
(
//    scalarLevels
    layerSets
    layerFields
);

mergeTolerance 1e-6;

// ************************************************************************* //
